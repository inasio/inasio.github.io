<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pantaloche</title>
    <link>https://inasio.github.io/</link>
    <description>Recent content on Pantaloche</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](http://gohugo.io).</copyright>
    <lastBuildDate>Thu, 08 Mar 2018 11:11:49 -0700</lastBuildDate>
    
	<atom:link href="https://inasio.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Worst movie ever</title>
      <link>https://inasio.github.io/post/not-sure-here.../</link>
      <pubDate>Thu, 08 Mar 2018 11:11:49 -0700</pubDate>
      
      <guid>https://inasio.github.io/post/not-sure-here.../</guid>
      <description>I clearly remember seeing the movie Breaking the waves (dir: Von Trier), out of highschool, with an old jesuit friend. I was fucking furious at the end of it (my friend on the other hand was practically ecstatic). I just couldn&amp;rsquo;t grasp the unfairness, the injustice of what happens to the girl in the movie, and how it was portrayed as something magical or beautiful or sacred or some shit like that.</description>
    </item>
    
    <item>
      <title>Solving a multi-knapsack problem iteratively</title>
      <link>https://inasio.github.io/post/iterative-multi-knapsack-optimization/</link>
      <pubDate>Thu, 08 Feb 2018 15:51:44 -0700</pubDate>
      
      <guid>https://inasio.github.io/post/iterative-multi-knapsack-optimization/</guid>
      <description>Goal
Distribute the given boxes into a hundred trucks so that the lightest and heaviest have the smallest possible weight difference.
Background
You are a great tycoon who needs to move materials, equipment and gold from Chicago to New York to build your next sky scraper. You have a convoy of 100 trucks and a variable amount of boxes to move. Unfortunately there are unscrupulous villains who would like to steal the gold from one of your shipments.</description>
    </item>
    
    <item>
      <title>Read All the Books</title>
      <link>https://inasio.github.io/post/read-all-the-books/</link>
      <pubDate>Thu, 05 Oct 2017 15:51:44 -0700</pubDate>
      
      <guid>https://inasio.github.io/post/read-all-the-books/</guid>
      <description>I like to read books. The first real books that I ever read, just lines of words in each page, were the Sandokan books by Emilio Salgari (Salgari is probably worth writing a post or two, at the very least). I read that I could find, then read them again, and then I read them again. I remember being frustrated that by chance I had managed to luck out and start reading with world&amp;rsquo;s very best most excellent books, the frustration being that it was all going to be downhill from here.</description>
    </item>
    
    <item>
      <title>Meta post</title>
      <link>https://inasio.github.io/post/welcome/</link>
      <pubDate>Thu, 28 Sep 2017 15:35:54 -0700</pubDate>
      
      <guid>https://inasio.github.io/post/welcome/</guid>
      <description>Welcome to my new website I&amp;rsquo;m very happy to introduce my new website! The plan is to get back into writing, I&amp;rsquo;m not really sure what shape or form it will take. I remember as a kid the day that the coin dropped in my head on how writing represented spoken language, and specifically I remember that the first work I wrote (and proudly showed my mom) was meta. It&amp;rsquo;s in that sense that this is the Meta post.</description>
    </item>
    
    <item>
      <title>Implementing a DFS backtracking algorithm for optimal bomb placement</title>
      <link>https://inasio.github.io/post/dfs-for-bomb-placement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://inasio.github.io/post/dfs-for-bomb-placement/</guid>
      <description>Background
Original problem:
Codingame vox-codei episode 1
There are a number of targets places in a rectangular grid that must be destroyed with by placing bombs near them. Bombs will destroy targets up to three spaces directly above, below, left, or right of where the bombs are placed, but obstacles could be in the way.
Bomb code
First we define a few examples that can be easily understood. We will start with a greedy algorithm (try to place the best possible bomb), and notice that the example num = 0 is designed to fail the greedy approach.</description>
    </item>
    
  </channel>
</rss>